{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":91716,"databundleVersionId":11893428,"sourceType":"competition"}],"dockerImageVersionId":31012,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport tensorflow as tf\nfrom tensorflow import keras\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-05-13T11:08:29.293023Z","iopub.execute_input":"2025-05-13T11:08:29.293390Z","iopub.status.idle":"2025-05-13T11:08:29.302956Z","shell.execute_reply.started":"2025-05-13T11:08:29.293358Z","shell.execute_reply":"2025-05-13T11:08:29.302078Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s5e5/sample_submission.csv\n/kaggle/input/playground-series-s5e5/train.csv\n/kaggle/input/playground-series-s5e5/test.csv\n","output_type":"stream"}],"execution_count":13},{"cell_type":"code","source":"# read csv\n\ntrain_file_path = \"/kaggle/input/playground-series-s5e5/train.csv\"\ntest_file_path = \"/kaggle/input/playground-series-s5e5/test.csv\"\nsample_subbission_file_path = \"/kaggle/input/playground-series-s5e5/sample_submission.csv\"\n\n\ntrain_dataset = pd.read_csv(train_file_path)\ntest_dataset = pd.read_csv(test_file_path)\nsample_submission = pd.read_csv(sample_subbission_file_path)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-13T11:03:15.520181Z","iopub.execute_input":"2025-05-13T11:03:15.520733Z","iopub.status.idle":"2025-05-13T11:03:16.907773Z","shell.execute_reply.started":"2025-05-13T11:03:15.520709Z","shell.execute_reply":"2025-05-13T11:03:16.906098Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"train_dataset.head(10)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-13T11:03:58.742067Z","iopub.execute_input":"2025-05-13T11:03:58.742455Z","iopub.status.idle":"2025-05-13T11:03:58.760930Z","shell.execute_reply.started":"2025-05-13T11:03:58.742430Z","shell.execute_reply":"2025-05-13T11:03:58.758833Z"}},"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"   id     Sex  Age  Height  Weight  Duration  Heart_Rate  Body_Temp  Calories\n0   0    male   36   189.0    82.0      26.0       101.0       41.0     150.0\n1   1  female   64   163.0    60.0       8.0        85.0       39.7      34.0\n2   2  female   51   161.0    64.0       7.0        84.0       39.8      29.0\n3   3    male   20   192.0    90.0      25.0       105.0       40.7     140.0\n4   4  female   38   166.0    61.0      25.0       102.0       40.6     146.0\n5   5  female   26   156.0    56.0      19.0       100.0       40.5     103.0\n6   6  female   21   172.0    73.0       3.0        81.0       38.3       9.0\n7   7    male   46   188.0    94.0      23.0       100.0       40.8     145.0\n8   8  female   33   166.0    63.0      25.0       107.0       40.5     161.0\n9   9    male   65   185.0    88.0      23.0       104.0       41.0     185.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>Height</th>\n      <th>Weight</th>\n      <th>Duration</th>\n      <th>Heart_Rate</th>\n      <th>Body_Temp</th>\n      <th>Calories</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>male</td>\n      <td>36</td>\n      <td>189.0</td>\n      <td>82.0</td>\n      <td>26.0</td>\n      <td>101.0</td>\n      <td>41.0</td>\n      <td>150.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>female</td>\n      <td>64</td>\n      <td>163.0</td>\n      <td>60.0</td>\n      <td>8.0</td>\n      <td>85.0</td>\n      <td>39.7</td>\n      <td>34.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>female</td>\n      <td>51</td>\n      <td>161.0</td>\n      <td>64.0</td>\n      <td>7.0</td>\n      <td>84.0</td>\n      <td>39.8</td>\n      <td>29.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>male</td>\n      <td>20</td>\n      <td>192.0</td>\n      <td>90.0</td>\n      <td>25.0</td>\n      <td>105.0</td>\n      <td>40.7</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>female</td>\n      <td>38</td>\n      <td>166.0</td>\n      <td>61.0</td>\n      <td>25.0</td>\n      <td>102.0</td>\n      <td>40.6</td>\n      <td>146.0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>5</td>\n      <td>female</td>\n      <td>26</td>\n      <td>156.0</td>\n      <td>56.0</td>\n      <td>19.0</td>\n      <td>100.0</td>\n      <td>40.5</td>\n      <td>103.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>6</td>\n      <td>female</td>\n      <td>21</td>\n      <td>172.0</td>\n      <td>73.0</td>\n      <td>3.0</td>\n      <td>81.0</td>\n      <td>38.3</td>\n      <td>9.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7</td>\n      <td>male</td>\n      <td>46</td>\n      <td>188.0</td>\n      <td>94.0</td>\n      <td>23.0</td>\n      <td>100.0</td>\n      <td>40.8</td>\n      <td>145.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>8</td>\n      <td>female</td>\n      <td>33</td>\n      <td>166.0</td>\n      <td>63.0</td>\n      <td>25.0</td>\n      <td>107.0</td>\n      <td>40.5</td>\n      <td>161.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>9</td>\n      <td>male</td>\n      <td>65</td>\n      <td>185.0</td>\n      <td>88.0</td>\n      <td>23.0</td>\n      <td>104.0</td>\n      <td>41.0</td>\n      <td>185.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":10},{"cell_type":"code","source":"train_dataset.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-13T11:03:16.947951Z","iopub.execute_input":"2025-05-13T11:03:16.948498Z","iopub.status.idle":"2025-05-13T11:03:17.049448Z","shell.execute_reply.started":"2025-05-13T11:03:16.948470Z","shell.execute_reply":"2025-05-13T11:03:17.048490Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 750000 entries, 0 to 749999\nData columns (total 9 columns):\n #   Column      Non-Null Count   Dtype  \n---  ------      --------------   -----  \n 0   id          750000 non-null  int64  \n 1   Sex         750000 non-null  object \n 2   Age         750000 non-null  int64  \n 3   Height      750000 non-null  float64\n 4   Weight      750000 non-null  float64\n 5   Duration    750000 non-null  float64\n 6   Heart_Rate  750000 non-null  float64\n 7   Body_Temp   750000 non-null  float64\n 8   Calories    750000 non-null  float64\ndtypes: float64(6), int64(2), object(1)\nmemory usage: 51.5+ MB\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"train_dataset.sort_values(by=['Calories'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-13T11:03:17.050959Z","iopub.execute_input":"2025-05-13T11:03:17.051277Z","iopub.status.idle":"2025-05-13T11:03:17.277287Z","shell.execute_reply.started":"2025-05-13T11:03:17.051253Z","shell.execute_reply":"2025-05-13T11:03:17.276554Z"}},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"            id   Sex  Age  Height  Weight  Duration  Heart_Rate  Body_Temp  \\\n149907  149907  male   20   173.0    72.0       1.0        72.0       37.9   \n305204  305204  male   20   183.0    78.0       1.0        76.0       37.7   \n675677  675677  male   25   183.0    79.0       1.0        78.0       37.7   \n449312  449312  male   21   183.0    81.0       1.0        75.0       37.8   \n256166  256166  male   24   187.0    81.0       1.0        76.0       37.7   \n...        ...   ...  ...     ...     ...       ...         ...        ...   \n68802    68802  male   29   202.0    99.0      29.0       120.0       40.7   \n460611  460611  male   76   199.0    98.0      29.0       123.0       40.8   \n530685  530685  male   75   199.0   103.0      30.0       123.0       40.5   \n184638  184638  male   79   188.0    90.0      28.0       123.0       41.0   \n427712  427712  male   69   201.0    99.0      29.0       111.0       41.1   \n\n        Calories  \n149907       1.0  \n305204       1.0  \n675677       1.0  \n449312       1.0  \n256166       1.0  \n...          ...  \n68802      314.0  \n460611     314.0  \n530685     314.0  \n184638     314.0  \n427712     314.0  \n\n[750000 rows x 9 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>Height</th>\n      <th>Weight</th>\n      <th>Duration</th>\n      <th>Heart_Rate</th>\n      <th>Body_Temp</th>\n      <th>Calories</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>149907</th>\n      <td>149907</td>\n      <td>male</td>\n      <td>20</td>\n      <td>173.0</td>\n      <td>72.0</td>\n      <td>1.0</td>\n      <td>72.0</td>\n      <td>37.9</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>305204</th>\n      <td>305204</td>\n      <td>male</td>\n      <td>20</td>\n      <td>183.0</td>\n      <td>78.0</td>\n      <td>1.0</td>\n      <td>76.0</td>\n      <td>37.7</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>675677</th>\n      <td>675677</td>\n      <td>male</td>\n      <td>25</td>\n      <td>183.0</td>\n      <td>79.0</td>\n      <td>1.0</td>\n      <td>78.0</td>\n      <td>37.7</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>449312</th>\n      <td>449312</td>\n      <td>male</td>\n      <td>21</td>\n      <td>183.0</td>\n      <td>81.0</td>\n      <td>1.0</td>\n      <td>75.0</td>\n      <td>37.8</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>256166</th>\n      <td>256166</td>\n      <td>male</td>\n      <td>24</td>\n      <td>187.0</td>\n      <td>81.0</td>\n      <td>1.0</td>\n      <td>76.0</td>\n      <td>37.7</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>68802</th>\n      <td>68802</td>\n      <td>male</td>\n      <td>29</td>\n      <td>202.0</td>\n      <td>99.0</td>\n      <td>29.0</td>\n      <td>120.0</td>\n      <td>40.7</td>\n      <td>314.0</td>\n    </tr>\n    <tr>\n      <th>460611</th>\n      <td>460611</td>\n      <td>male</td>\n      <td>76</td>\n      <td>199.0</td>\n      <td>98.0</td>\n      <td>29.0</td>\n      <td>123.0</td>\n      <td>40.8</td>\n      <td>314.0</td>\n    </tr>\n    <tr>\n      <th>530685</th>\n      <td>530685</td>\n      <td>male</td>\n      <td>75</td>\n      <td>199.0</td>\n      <td>103.0</td>\n      <td>30.0</td>\n      <td>123.0</td>\n      <td>40.5</td>\n      <td>314.0</td>\n    </tr>\n    <tr>\n      <th>184638</th>\n      <td>184638</td>\n      <td>male</td>\n      <td>79</td>\n      <td>188.0</td>\n      <td>90.0</td>\n      <td>28.0</td>\n      <td>123.0</td>\n      <td>41.0</td>\n      <td>314.0</td>\n    </tr>\n    <tr>\n      <th>427712</th>\n      <td>427712</td>\n      <td>male</td>\n      <td>69</td>\n      <td>201.0</td>\n      <td>99.0</td>\n      <td>29.0</td>\n      <td>111.0</td>\n      <td>41.1</td>\n      <td>314.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>750000 rows × 9 columns</p>\n</div>"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"sample_submission.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-13T11:03:17.278352Z","iopub.execute_input":"2025-05-13T11:03:17.278681Z","iopub.status.idle":"2025-05-13T11:03:17.292513Z","shell.execute_reply.started":"2025-05-13T11:03:17.278653Z","shell.execute_reply":"2025-05-13T11:03:17.291535Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 250000 entries, 0 to 249999\nData columns (total 2 columns):\n #   Column    Non-Null Count   Dtype  \n---  ------    --------------   -----  \n 0   id        250000 non-null  int64  \n 1   Calories  250000 non-null  float64\ndtypes: float64(1), int64(1)\nmemory usage: 3.8 MB\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"def get_model():\n    model = keras.Sequential([\n        keras.layers.Dense(10)\n    ])\n    return model\n\ndnn_model = get_model()\n\ndnn_model.summary()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-13T11:11:53.715499Z","iopub.execute_input":"2025-05-13T11:11:53.715819Z","iopub.status.idle":"2025-05-13T11:11:53.735102Z","shell.execute_reply.started":"2025-05-13T11:11:53.715796Z","shell.execute_reply":"2025-05-13T11:11:53.734187Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_9\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_9\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n│ dense_3 (\u001b[38;5;33mDense\u001b[0m)                      │ ?                           │     \u001b[38;5;34m0\u001b[0m (unbuilt) │\n└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n│ dense_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ ?                           │     <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":27}]}